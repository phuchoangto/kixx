generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  SHIPPING
  DELIVERED
  CANCELLED
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders            Order[]
  shippingAddresses ShippingAddress[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  @db.Text
  price       Decimal
  discount    Decimal? @default(0)
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  variants ProductVariant[]
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  name      String
  price     Decimal
  discount  Decimal? @default(0)
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId  Int
  product    Product     @relation(fields: [productId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id        Int         @id @default(autoincrement())
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  userId Int
  user   User        @relation(fields: [userId], references: [id])
  items  OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId          Int
  order            Order          @relation(fields: [orderId], references: [id])
  productVariantId Int
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
}

model ShippingAddress {
  id        Int      @id @default(autoincrement())
  address   String
  city      String
  state     String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id])
}